name: Build and Push Website

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Ensure the workflow can manage releases and tags

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Inject API Key from GitHub Secrets
        run: |
          echo "VITE_API_KEY=${{ secrets.API_KEY }}" > .env
          echo "API Key loaded into .env"

      - name: Retrieve API Gateway URL from SSM
        run: |
          API_GATEWAY_URL=$(aws ssm get-parameter --name "/angus/api-url" --query "Parameter.Value" --output text --region us-east-1)
          echo "VITE_API_URL=$API_GATEWAY_URL" >> $GITHUB_ENV

      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Zip the dist folder
        run: |
          zip -r dist.zip dist/

      - name: Debug existing releases and tags
        run: |
          echo "Checking for existing release with tag 'latest'..."
          curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/latest || echo "No release found"
          echo "Checking for existing tag 'latest'..."
          curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/git/refs/tags/latest || echo "No tag found"

      - name: Delete existing release (if exists)
        run: |
          echo "Deleting existing release with tag 'latest'..."
          curl -s \
            -X DELETE \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/latest || echo "No release to delete"
          echo "Deleting existing tag 'latest'..."
          curl -s \
            -X DELETE \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/git/refs/tags/latest || echo "No tag to delete"

      - name: Create a GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: "Website Build"
          draft: false
          prerelease: false

      - name: Upload artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip
